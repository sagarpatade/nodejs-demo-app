name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: sagarpatade1900/nodejs-demo-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show repo layout (debug)
        run: ls -R . | head -150

      - name: Resolve project root
        id: findroot
        run: |
          ROOT=$(git ls-files --full-name package.json | head -1 | xargs dirname)
          if [ -z "$ROOT" ]; then
            echo "Could not find package.json"
            exit 1
          fi
          echo "project_root=$ROOT" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd "${{ steps.findroot.outputs.project_root }}"
          npm ci

      - name: Run app in background for test
        run: |
          cd "${{ steps.findroot.outputs.project_root }}"
          node app.js & 
          sleep 5

      - name: Run smoke test
        run: |
          cd "${{ steps.findroot.outputs.project_root }}"
          npm test

      - name: Set up QEMU (optional multi-platform)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          # build from the resolved project root so Dockerfile is in context
          cd "${{ steps.findroot.outputs.project_root }}"
          docker buildx build --push --tag ${{ env.IMAGE_NAME }}:latest --tag ${{ env.IMAGE_NAME }}:${{ github.sha }} .
